<mxfile host="app.diagrams.net" modified="2020-09-06T16:30:15.739Z" agent="5.0 (X11)" etag="gOB4qd913dRtAlpfRK4-" version="13.6.6" type="github">
  <diagram id="L8TuEk9Ee9Zbtea8qNrc" name="Page-1">
    <mxGraphModel dx="1952" dy="623" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="unJenYqaQAGChnfxspGW-1" value="&lt;h1&gt;Generator Overview&lt;br&gt;&lt;/h1&gt;&lt;p&gt;- def) a function that can stop midway and then continue from where it stopped. &lt;br&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp; - a function which behaves like an iterator&lt;br&gt;&lt;/p&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- terms)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; - generator object: an iterator which allows you use its functions like &#39;next&#39;, &lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; - return object: an object you get when call &#39;next&#39; of a generator object&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; - {&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; value: xxx,&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; done: boolean&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- questions)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; - &#39;return&#39; in a generator?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; - you can use &#39;return&#39; keyword but the generator finish its task and the code after the &#39;return&#39; never exected.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; - what if we call &#39;next&#39; after no &#39;yield&#39; anymore?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; - &#39;undefined&#39; is returned.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;benefits)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; - better async code&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; - use of &#39;promise&#39; cause a little increase of boilerplate and bad readability (&#39;promise hell&#39;). requires a lot of chains.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp; - if use generators, no more chain and single level of coding.&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="-90" y="20" width="190" height="860" as="geometry" />
        </mxCell>
        <mxCell id="unJenYqaQAGChnfxspGW-2" value="&lt;div&gt;syntax&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;function * genFunc() {&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;...&lt;/div&gt;&lt;div&gt;yield 1&lt;br&gt;&lt;/div&gt;&lt;div&gt;...&lt;/div&gt;&lt;div&gt;yield 2&lt;br&gt;&lt;/div&gt;&lt;div&gt;...&lt;/div&gt;&lt;div&gt;yield 3&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;}&lt;br&gt;&lt;/div&gt;" style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;" vertex="1" parent="1">
          <mxGeometry x="590" y="30" width="210" height="290" as="geometry" />
        </mxCell>
        <mxCell id="unJenYqaQAGChnfxspGW-4" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="unJenYqaQAGChnfxspGW-3" target="unJenYqaQAGChnfxspGW-2">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="unJenYqaQAGChnfxspGW-3" value="&lt;div&gt;// get the generator object by calling the function&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;genObj = genFunc();&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// call &#39;next&#39; function and get &#39;return object&#39;&lt;/div&gt;&lt;div&gt;&lt;b&gt;genObj.next()&lt;/b&gt; // { value: 1, done: false }&lt;/div&gt;&lt;div&gt;// the generator pause right after &#39;yield 1&#39; and wait for next &#39;next&#39;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// second &#39;next&#39; and got &#39;2&#39; &lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;genObj.next()&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;...&lt;br&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="180" y="80" width="280" height="210" as="geometry" />
        </mxCell>
        <mxCell id="unJenYqaQAGChnfxspGW-5" value="&lt;font size=&quot;1&quot;&gt;&lt;b style=&quot;font-size: 16px&quot;&gt;Benefit 1: async &lt;br&gt;&lt;/b&gt;&lt;/font&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="180" y="380" width="160" height="20" as="geometry" />
        </mxCell>
        <mxCell id="unJenYqaQAGChnfxspGW-6" value="&lt;div&gt;promise base&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;function wrapperFunc() {&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;return fetch(url)&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;.then(value =&amp;gt; ...)&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;.then(value =&amp;gt; ...)&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;.catch(error =&amp;gt; ...)&lt;/div&gt;&lt;div&gt;}&lt;br&gt;&lt;/div&gt;" style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;" vertex="1" parent="1">
          <mxGeometry x="210" y="430" width="210" height="290" as="geometry" />
        </mxCell>
        <mxCell id="unJenYqaQAGChnfxspGW-7" value="&lt;div&gt;generators base&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;function generatorFunc() {&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&amp;nbsp;&amp;nbsp; yield ...&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&amp;nbsp;&amp;nbsp; yield ...&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&amp;nbsp;&amp;nbsp; yield ...&lt;br&gt;&lt;/div&gt;}" style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;" vertex="1" parent="1">
          <mxGeometry x="590" y="430" width="210" height="290" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
